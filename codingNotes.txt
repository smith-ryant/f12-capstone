PROBLEMS
=======================================
BIG PROBLEMS
___________________
1. When I enter information into new airplane form. 
  a. the correct information is logged to the console.
  b. it is not loaded in the database.
2. The modal opens when an aircraft image is clicked.
  FIXED: a. the home link on the airplane.html does not work.
  FIXED: b. there is no airplane image populating the airplane.html browser

SMALL PROBLEMS
___________________
ss is not right on the nav bar
links on the nav bar are incorrect
format the currency in the airplane card
fix the add aircraft button

fix some sort of .put
how do I define a url when I am serving static files?
set up the database (supabase)
make the images shrink as the window gets smaller



IDEAS
=======================================
button to reserve the airplane
move the airplane to a reserved table
fix the add a plane form to always be in the same spot

IMPORTANT
=======================================
To determine where the images are being served from, you can inspect the network traffic in your browser's developer tools. Here's how you can do it in Chrome:

Open the developer tools (you can do this by right-clicking anywhere on the page and selecting "Inspect" or by pressing Cmd + Option + I on a Mac).

Click on the "Network" tab.

Refresh the page to start capturing network traffic.

Look for the requests that are loading the images. The "Name" column will show the URL of the image, and the "Type" column will show the type of the resource (it should say "img" for images).

If the images are being served from your server, the URL will start with your server's address. If they're being served from a static file, the URL will likely start with a file path.

You can also click on the request and look at the "Headers" tab to see more information about the request and response. The "Response Headers" section will show the server that responded to the request, which can give you more information about where the image is coming from.

If the images are coming from your database, the URLs would likely be pointing to some storage service where the images are hosted, as databases typically store just the URL/reference to the image file, not the image file itself.
DB SETUPS
=======================================
//To create a seed file using pgAdmin:
require('dotenv').config();
const fs = require('fs');
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

const dbJson = fs.readFileSync('db.json', 'utf8');
const airplanesData = JSON.parse(dbJson);

const seedDatabase = async () => {
  for (let airplane of airplanesData) {
    await supabase
      .from('Airplanes')
      .insert([
        {
          nNumber: airplane.nNumber,
          airplaneYear: airplane.year,
          airplaneMake: airplane.make,
          airplaneModel: airplane.model,
          airplanePrice: airplane.price,
          airplaneImageURL: airplane.imgURL
        }
      ])
      .catch(console.error);
  }
  console.log('Data import success');
};

seedDatabase().catch(err => {
  console.error('Data import error: ', err);
});

MAKE SURE you have a .env file in your project root with the following variables:
DB_USER=yourUsername
DB_HOST=localhost
DB_NAME=yourDatabase
DB_PASSWORD=yourPassword
DB_PORT=5432
PORT=3000
_______________________________________
To create a seed file for supabase:
require('dotenv').config();
const fs = require('fs');
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

const dbJson = fs.readFileSync('db.json', 'utf8');
const airplanesData = JSON.parse(dbJson);

const seedDatabase = async () => {
  for (let airplane of airplanesData) {
    await supabase
      .from('Airplanes')
      .insert([
        {
          nNumber: airplane.nNumber,
          airplaneYear: airplane.year,
          airplaneMake: airplane.make,
          airplaneModel: airplane.model,
          airplanePrice: airplane.price,
          airplaneImageURL: airplane.imgURL
        }
      ])
      .catch(console.error);
  }
  console.log('Data import success');
};

seedDatabase().catch(err => {
  console.error('Data import error: ', err);
});

MAKE SURE you have a .env file in your project root with the following variables:
SUPABASE_URL=yourSupabaseUrl
SUPABASE_KEY=yourSupabaseKey
